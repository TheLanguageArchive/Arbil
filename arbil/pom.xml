<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>nl.mpi</groupId>
    <artifactId>arbil</artifactId>
    <packaging>jar</packaging>
    <!--    Either use the snapshot version of manually enter the current build number. 
    The build number is only required when depending on the output in other projects or building to the server.-->


<!--<version>${arbil.majorVersion}.${arbil.minorVersion}-${arbil.branch}-SNAPSHOT</version>-->
    <version>2.6.1087-pretesting</version>
    <name>Arbil</name>   
    
    <parent>
        <groupId>nl.mpi</groupId>
        <artifactId>arbil-parent</artifactId>
        <version>2.6</version>
    </parent> 
    
    <properties>
        <!-- Title of the application as it should be shown run time, e.g. in window titles, error log and "About Arbil" dialog -->
        <arbil.application-title>Arbil</arbil.application-title>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <output.jarname>${project.build.finalName}</output.jarname>
        <output.directory>${project.build.directory}</output.directory>
        <netbeans.hint.license>gpl20</netbeans.hint.license>  
        <maven.build.timestamp.format>EEE MMM dd HH:mm:ss z yyyy</maven.build.timestamp.format><!--"Mon Dec 10 14:37:33 CET 2012"-->
        <application.build-date>${maven.build.timestamp}</application.build-date>                  
    </properties>
    
    <build>
	<resources>
	    <resource>
		<directory>src/main/resources</directory>
		<filtering>false</filtering>
	    </resource>
	    <resource>
		<directory>src/main/resources</directory>
		<filtering>true</filtering>
		<includes>
		    <include>**/version.properties</include>
		</includes>
	    </resource>
	</resources>
	<plugins>
	    <plugin>
		<groupId>org.codehaus.mojo</groupId>
		<artifactId>properties-maven-plugin</artifactId>
		<version>1.0-alpha-2</version>
		<executions>
		    <execution>
			<phase>initialize</phase>
			<goals>
			    <goal>read-project-properties</goal>
			</goals>
			<configuration>
			    <files>
				<file>application.properties</file>
			    </files>
			</configuration>
		    </execution>
		</executions>
	    </plugin>
	    <plugin>
		<groupId>org.apache.maven.plugins</groupId>
		<artifactId>maven-jar-plugin</artifactId>
		<version>2.4</version>
		<configuration>
		    <finalName>${output.jarname}</finalName>
		    <outputDirectory>${output.directory}</outputDirectory>
		    <archive>
			<manifest>
			    <addClasspath>true</addClasspath>
			    <mainClass>${application.mainClass}</mainClass>
			    <classpathPrefix>lib/</classpathPrefix>                            
			</manifest>
                        <manifestEntries>
                            <Permissions>all-permissions</Permissions>
                        </manifestEntries>
                    </archive>
		    <excludes>
			<exclude>nl/mpi/arbil/resources/**/readme.txt</exclude>
			<exclude>nl/mpi/arbil/resources/icons/svg-files/**</exclude>
			<exclude>nl/mpi/arbil/resources/icons/*.ico</exclude>
			<exclude>nl/mpi/arbil/resources/icons/*.icns</exclude>
		    </excludes>
		</configuration>
	    </plugin>
	    <!--copy fallback IMDI templates (call ant task) -->
	    <plugin>
		<artifactId>maven-antrun-plugin</artifactId>
		<version>1.7</version>
		<executions>
		    <execution>
			<phase>compile</phase>
			<configuration>
			    <target>
				<property name="BUILDDIR" value="${project.build.outputDirectory}" />
				<ant antfile="arbil-getfallbackfiles.xml">
				    <target name="getFallbackFiles-x" />
				</ant>
			    </target>
			</configuration>
			<goals>
			    <goal>run</goal>
			</goals>
		    </execution>
		</executions>
	    </plugin>
	    <plugin>
		<groupId>org.apache.maven.plugins</groupId>
		<artifactId>maven-dependency-plugin</artifactId>
		<version>2.6</version>
		<executions>
		    <execution>
			<id>copy-dependencies</id>
			<phase>compile</phase>
			<goals>
			    <goal>copy-dependencies</goal>
			</goals>
			<configuration>
			    <outputDirectory>${output.directory}/lib</outputDirectory>
			    <overWriteReleases>false</overWriteReleases>
			    <overWriteSnapshots>false</overWriteSnapshots>
			    <overWriteIfNewer>true</overWriteIfNewer>
			    <excludeArtifactIds>junit</excludeArtifactIds>
			</configuration>
		    </execution>
		</executions>
	    </plugin>	   
	    <plugin>
		<!-- 
		    License plugin checks for presence of license header in all source files (with some exceptions, see excludes below).
		    You can use this plugin to actually insert or fix the license headers by running maven with the following goal:

			mvn license:format

                    For more info, see <http://mathieu.carbou.free.fr/p/maven-license-plugin/>.
                -->
                <groupId>com.mycila.maven-license-plugin</groupId>
                <artifactId>maven-license-plugin</artifactId>
                <version>1.9.0</version> 
                <configuration>
                    <header>${project.parent.basedir}/license-header.txt</header>
                    <strictCheck>false</strictCheck>
                    <properties>
                        <year>${arbil.license.copyrightYear}</year>
                        <organization>${project.organization.name}</organization>
                    </properties>
                    <mapping>
                        <svg>XML_STYLE</svg>
                        <imdi>XML_STYLE</imdi>
                        <cmdi>XML_STYLE</cmdi>
                    </mapping>
                    <excludes>
                        <exclude>**/*.txt</exclude>
                        <exclude>**/*.icns</exclude>
                        <exclude>**/*.php</exclude>
                        <exclude>installer/**</exclude>
                        <exclude>nbactions*.xml</exclude>
                        <exclude>nb-configuration.xml</exclude>
                        <exclude>src/main/resources/nl/mpi/arbil/defaults/**</exclude>
                        <exclude>src/main/resources/nl/mpi/arbil/resources/templates/**</exclude>
                        <exclude>src/main/resources/nl/mpi/arbil/resources/xsl/**</exclude>
                        <exclude>src/main/resources/nl/mpi/arbil/resources/xsd/http/**</exclude>
                        <exclude>src/main/resources/nl/mpi/arbil/resources/html/license/**</exclude>
                    </excludes>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <dependencies>
        <dependency>
            <groupId>org.apache.xmlbeans</groupId>
            <artifactId>xmlbeans</artifactId>
            <version>2.6.0</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>nl.mpi</groupId>
            <artifactId>typechecker</artifactId>
            <version>1.8.3</version>
            <exclusions>
                <exclusion>
                    <groupId>log4j</groupId>
                    <artifactId>log4j</artifactId>
                </exclusion>
            </exclusions>        
        </dependency>
        <dependency>
            <groupId>nl.nikhef</groupId>
            <artifactId>slcshttps</artifactId>
            <version>0.2</version>
        </dependency>
        <dependency>
            <groupId>nl.mpi</groupId>
            <artifactId>imdi-api</artifactId>
            <version>1.1.5</version>
            <exclusions>
                <exclusion>
                    <groupId>log4j</groupId>
                    <artifactId>log4j</artifactId>
                </exclusion>
                <exclusion>
                    <artifactId>slf4j-log4j12</artifactId>
                    <groupId>org.slf4j</groupId>
                </exclusion>
            </exclusions>   
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.6</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>net.sf.saxon</groupId>
            <artifactId>Saxon-HE</artifactId>
            <version>9.5.1-8</version>
        </dependency>
        <dependency>
            <groupId>xerces</groupId>
            <artifactId>xercesImpl</artifactId>
            <version>2.11.0</version>
        </dependency>
        <dependency>
            <groupId>xalan</groupId>
            <artifactId>xalan</artifactId>
            <version>2.7.2</version>
        </dependency>
        <dependency>
            <groupId>commons-digester</groupId>
            <artifactId>commons-digester</artifactId>
            <version>2.1</version>
        </dependency>
        <dependency>
            <groupId>nl.mpi</groupId>
            <artifactId>corpusstructure-api</artifactId>
            <version>1.8.8</version>
            <exclusions>
                <exclusion>
                    <groupId>log4j</groupId>
                    <artifactId>log4j</artifactId>
                </exclusion>
            </exclusions>   
        </dependency>
        <dependency>
            <groupId>nl.mpi</groupId>
            <artifactId>pluginloader</artifactId>
            <version>1.2.32-stable</version>
        </dependency>
        <dependency>
            <groupId>nl.mpi</groupId>
            <artifactId>arbil-help</artifactId>
            <version>2.6.36-stable</version>
        </dependency>
        <dependency>
            <groupId>nl.mpi</groupId>
            <artifactId>arbil-commons</artifactId>
            <version>2.6.42-stable</version>
        </dependency>
        <dependency>
            <groupId>nl.mpi</groupId>
            <artifactId>arbil-localisation</artifactId>
            <version>2.6.156-stable</version>
        </dependency>

        <!-- 
            LOGGING DEPENDENCIES
        -->

        <!-- Bind slf4j to JDK logging aka java.util.logging -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-jdk14</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <!-- log4j replacement that redirects to slf4j -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>log4j-over-slf4j</artifactId>
            <version>${slf4j.version}</version>
        </dependency>

        <!-- 
            TESTING DEPENDENCIES
        -->
        <dependency>
            <groupId>org.jmock</groupId>
            <artifactId>jmock-junit4</artifactId>
            <version>2.5.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>nl.mpi.translation</groupId>
            <artifactId>metadata-translator</artifactId>
            <version>1.6.0</version>
        </dependency>
    </dependencies>    
</project>
